/* ScummVM - Graphic Adventure Engine
 *
 * ScummVM is the legal property of its developers, whose names
 * are too numerous to list here. Please refer to the COPYRIGHT
 * file distributed with this source distribution.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

#ifndef COMPOSER4_DEFS_H
#define COMPOSER4_DEFS_H

#include "common/endian.h"

namespace Composer4 {

// auto generated from data files
// commented opcodes are unused in games
enum class FunctionOpcode : uint16 {
	// x prefix means event
	kxAnimationStart = 1,
	kxAnimationEnd = 2,
	kxLibraryLoad = 3,
	kxLibraryFree = 4,
	kxKeyDown = 5,
	kxKeyChar = 6,
	kxKeyUp = 7,
	kxQuitRequest = 8,
	kxAnimationTick = 9,
	kxLButtonDown = 10,
	kxLButtonUp = 11,
	kxRButtonDown = 12,
	kxRButtonUp = 13,
	kxMouseIn = 14,
	kxMouseOut = 15,
	kxMouseOver = 16,
	kxTimer = 17,
	kxLibLoadError = 25,
	kxSmackerStart = 30,
	kxSmackerEnd = 31,
	kxSmackerFrame = 32,
	kxKAUserError = 50,
	kxTimeToNextTick = 90,

	kStopAnimation = 35002,
	kStartTimer = 35004,
	kStopTimer = 35005,
	kSetCursor = 35006,
	kGetCursor = 35007,
	kShowCursor = 35008,
	kHideCursor = 35009,
	kActivateButton = 35011,
	kDeactivateButton = 35012,
	// kReloadLibrary = 35013,
	kLoadLibrary = 35014,
	kFreeLibrary = 35015,
	kSetPalette = 35016,
	// kSaveVars = 35017,
	// kRestoreVars = 35018,
	kSingleEvent = 35019,
	kGetCursorPos = 35020,
	kSetBackground = 35021,
	kSetDefBgColor = 35022,
	kClearAllSprites = 35023,
	kDrawSprite = 35024,
	kClearSprite = 35025,
	kExit = 35026,
	kSaveData = 35027,
	kLoadData = 35028,
	kGetSpriteSize = 35029,
	kPrint = 35030,
	kStartAnimation = 35032,
	kInitString = 35033,
	kTextOut = 35035,
	kSetFont = 35036,
	kSetTextAlign = 35037,
	// kGetSysInfo = 35039,
	kSuspendAnimation = 35043,
	kScrollScreen = 35044,
	kTransformSprite = 35045,
	kSetShadingTable = 35046,
	kMoveAnimation = 35047,
	kScaleAnimation = 35048,
	kCreateSprite = 35049,
	kMoveSprite = 35050,
	kDebugTrace = 35051,
	kSuspendTimer = 35052,
	kEnableLibrary = 35053,
	kSetSoundVolume = 35054,
	kSetPaletteFragment = 35056,
	kGetPaletteFragment = 35057,
	kGetResourcePaletteFragment = 35058,
	kSmackerStart = 35060,
	kSmackerStop = 35061,
	kSmackerSuspend = 35062,
	kGetAnimInfo = 35070,
	kGetButton = 35071,
	kRenderSprite2Sprite = 35072,
	kRedrawSprite = 35073,
	kGetTimeDate = 35074,
	kSetTranslationTable = 35075,
	kRecolorSprite = 35076,
	kGetAnimList = 35077,
	kLoadSprite = 35090,
	kSaveSprite = 35091,
	kFlushScreen = 35100,
	// kResourceLoad = 35321,
	// kResourceRelease = 35322,

	// FreeWalk
	kFWSetMap = 36003,
	kFWSetAnim = 36004,
	kFWSetStepSize = 36005,
	kFWSetMaxSlide = 36006,
	kFWStopWalk = 36007,
	kFWGetScale = 36008,
	kFWGetZLayer = 36009,
	kFWSetStartPoint = 36010,
	kFWSetStartDirection = 36011,
	kFWWalkTo = 36012,
	kFWGetLocation = 36014,
	kFWGetArea = 36015,
	kFWSuspend = 36016,
	kFWSkipToEnd = 36017,

	kGetTableDimensions = 37001,
	kGetTableElement = 37002,
	// kGetTableElementType = 37003,
	// kTableFindElement = 37004,
	// kButtonSetZ = 37204,
	kUniTextOut = 37500,
	kUniSetFont = 37501,
	kUniSetColorTable = 37502,
	kUniSetTextColor = 37504,
	kUniSetupSlot = 37505,
	kUniSetTextDirection = 37506,
	// kUniSetTextColor32 = 37507,
	// kUniSetSlot32 = 37508,
	// kUniGetFontHeight = 37509,
	// kUniTextOutExWidthCalc = 37510,
	// kUniTextOutExCharByPoint = 37511,
	// kUniTextOutExRectByChar = 37512,

	// Knowledge Adventure
	kKAGetIniString = 37999,
	kKAGetUser = 38500,
	kKACloseUser = 38501,
	// kKACloseDatabase = 38502,
	// kKAGetInt8Attr = 38510,
	// kKAGetInt16Attr = 38511,
	kKAGetInt32Attr = 38512,
	// kKAGetFloatAttr = 38513,
	kKAGetDateAttr = 38514,
	// kKAGetStringAttr = 38515,
	// kKASetInt8Attr = 38520,
	// kKASetInt16Attr = 38521,
	kKASetInt32Attr = 38522,
	// kKASetFloatAttr = 38523,
	kKASetDateAttr = 38524,
	// kKASetStringAttr = 38525,
	kKAAttrExists = 38530,
	// kKADeleteAttr = 38531,
	// kKAGetProdInt8 = 38540,
	// kKAGetProdInt16 = 38541,
	// kKAGetProdInt32 = 38542,
	// kKAGetProdFloat = 38543,
	// kKAGetProdDate = 38544,
	// kKAGetProdString = 38545,
	// kKASetProdInt8 = 38550,
	// kKASetProdInt16 = 38551,
	// kKASetProdInt32 = 38552,
	// kKASetProdFloat = 38553,
	// kKASetProdDate = 38554,
	// kKASetProdString = 38555,
	// kKAProdDataExists = 38560,
	// kKADeleteProdData = 38561,
	kKASkillAddSuccess = 38570,
	kKASkillAddFailure = 38571,
	kKASkillGetLevel = 38572,
	kKASkillSetLevel = 38573,
	kKASkillAutoChangeLevel = 38574,
	kKASkillGetDateRange = 38575,
	// kKASkillGetLevelRange = 38576,
	kKASkillGetResult1 = 38580,
	// kKASkillGetResult2 = 38581,
	kKASkillGetResult3 = 38582,
	// kKASkillGetResult4 = 38583,
	kKASkillGetResult5 = 38584,
	kKASkillGetResult6 = 38585,
	kKAUserEnumeration = 38590,
	kKAUserAnyMoreElements = 38591,
	kKAUserGetNextElement = 38592,
	kKAUserDeleteUser = 38593,
	kKAUserSetPath = 38594,
	kKAUserExist = 38595,
	// kKAGetArrayInt8Attr = 38610,
	// kKAGetArrayInt16Attr = 38611,
	// kKAGetArrayInt32Attr = 38612,
	// kKAGetArrayFloatAttr = 38613,
	// kKAGetArrayStringAttr = 38615,
	// kKASetArrayInt8Attr = 38620,
	// kKASetArrayInt16Attr = 38621,
	// kKASetArrayInt32Attr = 38622,
	// kKASetArrayFloatAttr = 38623,
	// kKASetArrayStringAttr = 38625,
	// kSwitchScreen = 50114,
};

enum class ResourceType {
	kBitmap = MKTAG('B', 'M', 'A', 'P'),
	kSound = MKTAG('W', 'A', 'V', 'E'),
	kPalette = MKTAG('C', 'T', 'B', 'L'),
	kButton = MKTAG('B', 'U', 'T', 'N'),
	kAnimation = MKTAG('A', 'N', 'I', 'M'),
	kString = MKTAG('S', 'T', 'R', ' '),
	kEvent = MKTAG('E', 'V', 'N', 'T'),
	kScript = MKTAG('S', 'C', 'R', 'P'),
	kWalkMap = MKTAG('W', 'M', 'A', 'P'),
	kShadeTable = MKTAG('S', 'T', 'B', 'L'),
	kTable = MKTAG('D', 'T', 'A', 'B'),
	// kVariable = MKTAG('V', 'A', 'R', 'I'),
	// kMouthSync = MKTAG('A', 'A', 'A', '1'),
	kUniFont = MKTAG('U', 'F', 'I', '1'),
	kFont = MKTAG('F', 'O', 'N', 'T'),
};

} // End of namespace Composer4

#endif // COMPOSER4_DEFS_H
